{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"damply","text":""},{"location":"#overview","title":"Overview","text":"<p>DaMPly (Data Management Plan) is a Python module designed to streamline the implementation and management of DMP compliant projects.</p>"},{"location":"CHANGELOG/","title":"CHANGELOG","text":""},{"location":"CHANGELOG/#v0250-2025-06-23","title":"v0.25.0 (2025-06-23)","text":""},{"location":"CHANGELOG/#chores","title":"Chores","text":"<ul> <li>Update lockfile   (<code>5e51e82</code>)</li> </ul>"},{"location":"CHANGELOG/#features","title":"Features","text":"<ul> <li> <p>Update ci   (<code>c1e3248</code>)</p> </li> <li> <p>Update ci   (<code>8e82a4c</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0240-2025-06-23","title":"v0.24.0 (2025-06-23)","text":""},{"location":"CHANGELOG/#bug-fixes","title":"Bug Fixes","text":"<ul> <li> <p>Lint   (<code>747eed0</code>)</p> </li> <li> <p>Only cache invalidate on major version upgrade   (<code>533469b</code>)</p> </li> <li> <p>Update sbatch to use DEBUG logging   (<code>6adbe63</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#chores_1","title":"Chores","text":"<ul> <li>Format and lint   (<code>575e099</code>)</li> </ul>"},{"location":"CHANGELOG/#features_1","title":"Features","text":"<ul> <li> <p>Add ability to specify job time when running full-audit   (<code>c2dc630</code>)</p> </li> <li> <p>Functioning collect-audit and plot   (<code>9ad2749</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0231-2025-06-23","title":"v0.23.1 (2025-06-23)","text":""},{"location":"CHANGELOG/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>Update size_gb calculation to use ByteSize helper for better precision   (<code>aac73fb</code>)</li> </ul>"},{"location":"CHANGELOG/#chores_2","title":"Chores","text":"<ul> <li> <p>Add plotly and kaleido dependencies for enhanced plotting capabilities   (<code>558b173</code>)</p> </li> <li> <p>Reintroduced plotly dependency with version constraints. - Added kaleido for static image   generation in plots.</p> </li> <li> <p>Add plotly dependency   (<code>0e98480</code>)</p> </li> <li> <p>Setup plot module   (<code>2b33cf5</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0230-2025-06-20","title":"v0.23.0 (2025-06-20)","text":""},{"location":"CHANGELOG/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>Add force option to project cli   (<code>05c4d84</code>)</li> </ul>"},{"location":"CHANGELOG/#chores_3","title":"Chores","text":"<ul> <li> <p>Format and lint   (<code>1f99f38</code>)</p> </li> <li> <p>Format and lint   (<code>3afc6af</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#features_2","title":"Features","text":"<ul> <li> <p>Add collect_audits   (<code>584e989</code>)</p> </li> <li> <p>Add collect_audits to cli   (<code>fabeb53</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0220-2025-06-20","title":"v0.22.0 (2025-06-20)","text":""},{"location":"CHANGELOG/#chores_4","title":"Chores","text":"<ul> <li>Format   (<code>1bff79f</code>)</li> </ul>"},{"location":"CHANGELOG/#features_3","title":"Features","text":"<ul> <li>Audit submission across both projects groups   (<code>d6590b3</code>)</li> </ul>"},{"location":"CHANGELOG/#v0210-2025-06-20","title":"v0.21.0 (2025-06-20)","text":""},{"location":"CHANGELOG/#features_4","title":"Features","text":"<ul> <li> <p>Ensure working audit   (<code>b61cbf4</code>)</p> </li> <li> <p>Started audit   (<code>58511e4</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0200-2025-06-20","title":"v0.20.0 (2025-06-20)","text":""},{"location":"CHANGELOG/#chores_5","title":"Chores","text":"<ul> <li> <p>Rearrange   (<code>c489eb5</code>)</p> </li> <li> <p>Update module imports   (<code>797cd12</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#features_5","title":"Features","text":"<ul> <li> <p>Add find readme utilitiy   (<code>bbd4fd6</code>)</p> </li> <li> <p>Add find readme utilitiy to project and update cli to not show compuuted details   (<code>bd6e1eb</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0190-2025-06-20","title":"v0.19.0 (2025-06-20)","text":""},{"location":"CHANGELOG/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>Limit suffixes to 3 parts   (<code>2432717</code>)</li> </ul>"},{"location":"CHANGELOG/#chores_6","title":"Chores","text":"<ul> <li>Add packaging   (<code>485fba7</code>)</li> </ul>"},{"location":"CHANGELOG/#features_6","title":"Features","text":"<ul> <li>Validate against package version   (<code>53259a6</code>)</li> </ul>"},{"location":"CHANGELOG/#v0182-2025-06-19","title":"v0.18.2 (2025-06-19)","text":""},{"location":"CHANGELOG/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li> <p>Better handling of cache   (<code>3b9c3bb</code>)</p> </li> <li> <p>Wrong mmethod   (<code>bd6d08c</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#chores_7","title":"Chores","text":"<ul> <li>Update lockfile   (<code>2d0fefb</code>)</li> </ul>"},{"location":"CHANGELOG/#v0181-2025-06-19","title":"v0.18.1 (2025-06-19)","text":""},{"location":"CHANGELOG/#bug-fixes_5","title":"Bug Fixes","text":"<ul> <li>Numbers arent suffixes   (<code>3076b4f</code>)</li> </ul>"},{"location":"CHANGELOG/#v0180-2025-06-19","title":"v0.18.0 (2025-06-19)","text":""},{"location":"CHANGELOG/#bug-fixes_6","title":"Bug Fixes","text":"<ul> <li>Remove last accessed, useless info   (<code>22f9d52</code>)</li> </ul>"},{"location":"CHANGELOG/#chores_8","title":"Chores","text":"<ul> <li>Update lockfile   (<code>7d2b43f</code>)</li> </ul>"},{"location":"CHANGELOG/#features_7","title":"Features","text":"<ul> <li> <p>Add file types and fix caching   (<code>6514bf6</code>)</p> </li> <li> <p>Update default groups and refactor table building   (<code>764d012</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0170-2025-06-13","title":"v0.17.0 (2025-06-13)","text":""},{"location":"CHANGELOG/#chores_9","title":"Chores","text":"<ul> <li> <p>Merge   (<code>3a7017b</code>)</p> </li> <li> <p>Update lockfile   (<code>b78ce26</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0160-2025-06-13","title":"v0.16.0 (2025-06-13)","text":""},{"location":"CHANGELOG/#bug-fixes_7","title":"Bug Fixes","text":"<ul> <li>Merge   (<code>f91b94a</code>)</li> </ul>"},{"location":"CHANGELOG/#chores_10","title":"Chores","text":"<ul> <li> <p>Fix ruff lint   (<code>573fb38</code>)</p> </li> <li> <p>Ruff format   (<code>05d0b18</code>)</p> </li> <li> <p>Ruff format   (<code>93d71b2</code>)</p> </li> <li> <p>Ruff format   (<code>957ebc6</code>)</p> </li> <li> <p>Ruff lint   (<code>3886c94</code>)</p> </li> <li> <p>Ruff lint   (<code>77bf13a</code>)</p> </li> <li> <p>Update lockfile   (<code>8946fd8</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#continuous-integration","title":"Continuous Integration","text":"<ul> <li>Fix actions workflow   (<code>b01bbcb</code>)</li> </ul>"},{"location":"CHANGELOG/#features_8","title":"Features","text":"<ul> <li> <p>Add file count and est time zone   (<code>dda9e24</code>)</p> </li> <li> <p>Add platformdis   (<code>52610ef</code>)</p> </li> <li> <p>Setup cache dir   (<code>bf189a0</code>)</p> </li> <li> <p>Setup directory audit to use user cache   (<code>08e18bf</code>)</p> </li> <li> <p>Validate   (<code>7674759</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0150-2025-06-13","title":"v0.15.0 (2025-06-13)","text":""},{"location":"CHANGELOG/#chores_11","title":"Chores","text":"<ul> <li> <p>Address ruff lint error   (<code>2782080</code>)</p> </li> <li> <p>Fix import order   (<code>6e4d44b</code>)</p> </li> <li> <p>Ruff format   (<code>d686334</code>)</p> </li> <li> <p>Ruff lint fix   (<code>0b3d627</code>)</p> </li> <li> <p>Suppress ruff lint   (<code>f203986</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#features_9","title":"Features","text":"<ul> <li> <p>Cleanup deps   (<code>d7cc3c3</code>)</p> </li> <li> <p>Update deps and style env   (<code>28954d4</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0140-2025-06-13","title":"v0.14.0 (2025-06-13)","text":""},{"location":"CHANGELOG/#chores_12","title":"Chores","text":"<ul> <li>Downgrade click version   (<code>e63ee31</code>)</li> </ul>"},{"location":"CHANGELOG/#features_10","title":"Features","text":"<ul> <li>Add click dependency   (<code>5fe9362</code>)</li> </ul>"},{"location":"CHANGELOG/#v0130-2025-06-13","title":"v0.13.0 (2025-06-13)","text":""},{"location":"CHANGELOG/#chores_13","title":"Chores","text":"<ul> <li> <p>Deprecate old metadata   (<code>b5349e5</code>)</p> </li> <li> <p>Deprecate old whose   (<code>9a82ea1</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#documentation","title":"Documentation","text":"<ul> <li>Update README   (<code>96a844e</code>)</li> </ul>"},{"location":"CHANGELOG/#features_11","title":"Features","text":"<ul> <li>Add whose cli entry point   (<code>bcbe058</code>)</li> </ul>"},{"location":"CHANGELOG/#v0120-2025-06-13","title":"v0.12.0 (2025-06-13)","text":""},{"location":"CHANGELOG/#bug-fixes_8","title":"Bug Fixes","text":"<ul> <li> <p>Add command and close docstring   (<code>c315c13</code>)</p> </li> <li> <p>Cli main error   (<code>aa0e319</code>)</p> </li> </ul> <p>fix: add command and close docstring</p>"},{"location":"CHANGELOG/#chores_14","title":"Chores","text":"<ul> <li> <p>Cleanup   (<code>80e6016</code>)</p> </li> <li> <p>Fix tests   (<code>3aa876a</code>)</p> </li> <li> <p>Update deps   (<code>dd11ff0</code>)</p> </li> <li> <p>Update lockfile   (<code>9efa8be</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#features_12","title":"Features","text":"<ul> <li> <p>Add logging config   (<code>06f2a33</code>)</p> </li> <li> <p>Full refactor   (<code>b8811c3</code>)</p> </li> <li> <p>Full refactor   (<code>b305597</code>)</p> </li> </ul> <p>feat: full refactor, simplifying CLI</p> <ul> <li> <p>Refactor to work   (<code>b71c9cf</code>)</p> </li> <li> <p>Small fix   (<code>5459162</code>)</p> </li> <li> <p>Update directory_list mod   (<code>6038756</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#refactoring","title":"Refactoring","text":"<ul> <li>Cleanup   (<code>0aa11ee</code>)</li> </ul>"},{"location":"CHANGELOG/#v0110-2025-05-26","title":"v0.11.0 (2025-05-26)","text":""},{"location":"CHANGELOG/#bug-fixes_9","title":"Bug Fixes","text":"<ul> <li> <p>Add custom exception for unset environment variables   (<code>784080a</code>)</p> </li> <li> <p>Adjust test for Windows path handling to set strict mode explicitly   (<code>57db00a</code>)</p> </li> <li> <p>Restore assertion for Windows file owner retrieval test   (<code>9986a79</code>)</p> </li> <li> <p>Update sha256 checksum for damply package version 0.10.0   (<code>0be6951</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#chores_15","title":"Chores","text":"<ul> <li>Update version and checksum in pixi.lock; modify README metadata   (<code>b480d2b</code>)</li> </ul>"},{"location":"CHANGELOG/#documentation_1","title":"Documentation","text":"<ul> <li> <p>Clean up index.md   (<code>3b1d489</code>)</p> </li> <li> <p>Remove about page   (<code>c960dbd</code>)</p> </li> <li> <p>Update to mkdocs   (<code>6f8c456</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#features_13","title":"Features","text":"<ul> <li> <p>Add documentation for DamplyDirs module and its usage   (<code>74d9c79</code>)</p> </li> <li> <p>Add Windows support to CI workflow matrix   (<code>650c192</code>)</p> </li> <li> <p>Implement DamplyDirs singleton initialization and add comprehensive tests   (<code>c48deb9</code>)</p> </li> <li> <p>Refactor damplydirs logic, include documentation, and add comprehensive tests   (<code>cf026d4</code>)</p> </li> </ul> <p>feat: refactor damplydirs logic, include documentation, and add comprehensive tests</p>"},{"location":"CHANGELOG/#refactoring_1","title":"Refactoring","text":"<ul> <li> <p>Streamline directory structure handling and improve error management   (<code>00ad73d</code>)</p> </li> <li> <p>Update file owner tests for platform-specific handling and improve readability   (<code>860d04f</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v0100-2025-05-20","title":"v0.10.0 (2025-05-20)","text":""},{"location":"CHANGELOG/#bug-fixes_10","title":"Bug Fixes","text":"<ul> <li> <p>Update pypi references from '.' to './' for consistency   (<code>bc1715f</code>)</p> </li> <li> <p>Update repository references and descriptions from jjjermiah to bhklab   (<code>ad73779</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#chores_16","title":"Chores","text":"<ul> <li> <p>Comment out Test-PyPi-Installation and Publish-To-Test-PyPi jobs in CI workflow   (<code>2ed0229</code>)</p> </li> <li> <p>Format and lint   (<code>5130657</code>)</p> </li> <li> <p>Move ruff config out and update deps   (<code>2f5a3fe</code>)</p> </li> <li> <p>Reformat   (<code>7a275c7</code>)</p> </li> <li> <p>Remove empty init.py file from dmpdirs directory   (<code>47ff2cd</code>)</p> </li> <li> <p>Update lockfile   (<code>aa9e4d9</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#code-style","title":"Code Style","text":"<ul> <li>Standardize indentation and formatting in whose.py   (<code>07e495f</code>)</li> </ul>"},{"location":"CHANGELOG/#continuous-integration_1","title":"Continuous Integration","text":"<ul> <li> <p>Disable fail-fast in job strategy for improved stability across OS matrix   (<code>f84c26e</code>)</p> </li> <li> <p>Streamline Codecov integration by removing redundant steps and ensuring coverage tracking   (<code>eb1fdef</code>)</p> </li> <li> <p>Update actions versions   (<code>5e341a8</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#features_14","title":"Features","text":"<ul> <li> <p>Add dmpdirs module for standardized project directory access   (<code>dc324e6</code>)</p> </li> <li> <p>Add dmpdirs module for standardized project directory access   (<code>0eeb8c5</code>)</p> </li> <li> <p>Update dependencies and refactor codebase   (<code>6b9905c</code>)</p> </li> <li> <p>Added <code>pybytesize</code> dependency to <code>pyproject.toml</code>. - Refactored <code>DirectoryAudit</code> to use   <code>path.stat()</code> instead of <code>os.stat()</code>. - Enhanced documentation in <code>DamplyDirs</code> class for better   clarity on usage and available directories. - Renamed <code>DirectoryNotFoundError</code> to   <code>DirectoryNameNotFoundError</code> for better accuracy. - Updated import statement for <code>ByteSize</code> to use   the new package location. - Refactored <code>damplyplot</code> function to improve variable naming and   clarity. - Removed obsolete <code>ByteSize</code> class and related tests. - Improved type hints across   various modules for better code clarity. - Updated exception handling in <code>whose.py</code> for better   error messages. - Cleaned up unused imports and improved code formatting.</p> </li> </ul>"},{"location":"CHANGELOG/#refactoring_2","title":"Refactoring","text":"<ul> <li> <p>Comment out Codecov steps in CI workflow for clarity   (<code>368671c</code>)</p> </li> <li> <p>Organize imports and improve formatting across multiple files   (<code>6d3d97a</code>)</p> </li> <li> <p>Rename DirectoryNotFoundError to DirectoryNameNotFoundError for clarity; remove unused test   (<code>b3bd833</code>)</p> </li> <li> <p>Restore and enable Codecov steps in CI workflow for coverage tracking   (<code>6c7e4ee</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v090-2024-08-20","title":"v0.9.0 (2024-08-20)","text":""},{"location":"CHANGELOG/#bug-fixes_11","title":"Bug Fixes","text":"<ul> <li> <p>Minor fixes   (<code>ed09859</code>)</p> </li> <li> <p>Minor updates   (<code>1a1d60c</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#chores_17","title":"Chores","text":"<ul> <li>Update   (<code>9c129ff</code>)</li> </ul>"},{"location":"CHANGELOG/#features_15","title":"Features","text":"<ul> <li>Field adding   (<code>b9780c5</code>)</li> </ul>"},{"location":"CHANGELOG/#v080-2024-08-01","title":"v0.8.0 (2024-08-01)","text":""},{"location":"CHANGELOG/#bug-fixes_12","title":"Bug Fixes","text":"<ul> <li> <p>Add tests and fix common root   (<code>3cb4199</code>)</p> </li> <li> <p>Merge   (<code>e6ae533</code>)</p> </li> <li> <p>Tests for whose command   (<code>f08d6c2</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#chores_18","title":"Chores","text":"<ul> <li>Format and clean   (<code>26bfaf3</code>)</li> </ul>"},{"location":"CHANGELOG/#features_16","title":"Features","text":"<ul> <li> <p>Add basic audit   (<code>e8c307e</code>)</p> </li> <li> <p>Added size check   (<code>219b653</code>)</p> </li> <li> <p>Init and config subcommands   (<code>578dfda</code>)</p> </li> <li> <p>Organize cli commands   (<code>e25a966</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v071-2024-07-31","title":"v0.7.1 (2024-07-31)","text":""},{"location":"CHANGELOG/#bug-fixes_13","title":"Bug Fixes","text":"<ul> <li>Update cli tool   (<code>9ea8c5a</code>)</li> </ul>"},{"location":"CHANGELOG/#v070-2024-07-31","title":"v0.7.0 (2024-07-31)","text":""},{"location":"CHANGELOG/#bug-fixes_14","title":"Bug Fixes","text":"<ul> <li> <p>Fix arrangement   (<code>3e94e4a</code>)</p> </li> <li> <p>Gha to not use locked   (<code>1233f00</code>)</p> </li> <li> <p>Lint and format and cleanup   (<code>c877847</code>)</p> </li> <li> <p>Update gha to not use locked pixi   (<code>189294e</code>)</p> </li> <li> <p>Update gha to not use locked pixi, add plot to cli   (<code>255e08e</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#features_17","title":"Features","text":"<ul> <li>Add damply plotting   (<code>dcc72e1</code>)</li> </ul>"},{"location":"CHANGELOG/#v060-2024-05-31","title":"v0.6.0 (2024-05-31)","text":""},{"location":"CHANGELOG/#bug-fixes_15","title":"Bug Fixes","text":"<ul> <li> <p>Lint   (<code>b0abdf4</code>)</p> </li> <li> <p>Lock   (<code>4168366</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#features_18","title":"Features","text":"<ul> <li>Major refactoring of cli   (<code>5998541</code>)</li> </ul>"},{"location":"CHANGELOG/#v050-2024-05-31","title":"v0.5.0 (2024-05-31)","text":""},{"location":"CHANGELOG/#chores_19","title":"Chores","text":"<ul> <li>Add tests   (<code>79044ef</code>)</li> </ul>"},{"location":"CHANGELOG/#features_19","title":"Features","text":"<ul> <li> <p>Add lazy loading for images in README view   (<code>7d1e053</code>)</p> </li> <li> <p>Add whose and file size   (<code>04772d4</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v041-2024-05-31","title":"v0.4.1 (2024-05-31)","text":""},{"location":"CHANGELOG/#bug-fixes_16","title":"Bug Fixes","text":"<ul> <li> <p>Format   (<code>e153b30</code>)</p> </li> <li> <p>Update metadata table title in cli.py   (<code>a63c36b</code>)</p> </li> <li> <p>Version   (<code>ecefaaf</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#chores_20","title":"Chores","text":"<ul> <li>Update navigation links in mkdocs.yaml   (<code>931524b</code>)</li> </ul>"},{"location":"CHANGELOG/#v040-2024-05-31","title":"v0.4.0 (2024-05-31)","text":""},{"location":"CHANGELOG/#bug-fixes_17","title":"Bug Fixes","text":"<ul> <li> <p>Lint   (<code>64944d3</code>)</p> </li> <li> <p>Refactor get_file_owner_full_name function for improved error handling and platform compatibility   (<code>f4fca58</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#features_20","title":"Features","text":"<ul> <li> <p>Add cli whose   (<code>b15ec32</code>)</p> </li> <li> <p>Update CLI help messages and add 'whose' command   (<code>620f209</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v030-2024-05-31","title":"v0.3.0 (2024-05-31)","text":""},{"location":"CHANGELOG/#chores_21","title":"Chores","text":"<ul> <li>Delete config/.pypackage-builder-answers.yml   (<code>a04cabd</code>)</li> </ul>"},{"location":"CHANGELOG/#features_21","title":"Features","text":"<ul> <li> <p>Add cli   (<code>1e825d1</code>)</p> </li> <li> <p>Add cli tool   (<code>077e52b</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v020-2024-05-31","title":"v0.2.0 (2024-05-31)","text":""},{"location":"CHANGELOG/#bug-fixes_18","title":"Bug Fixes","text":"<ul> <li>Tests so it makes file   (<code>69d4e54</code>)</li> </ul>"},{"location":"CHANGELOG/#features_22","title":"Features","text":"<ul> <li> <p>Add tests and major class   (<code>569177b</code>)</p> </li> <li> <p>Refactor metadata.py for improved readability and maintainability   (<code>cf909e0</code>)</p> </li> </ul>"},{"location":"CHANGELOG/#v011-2024-05-31","title":"v0.1.1 (2024-05-31)","text":""},{"location":"CHANGELOG/#bug-fixes_19","title":"Bug Fixes","text":"<ul> <li>Some pypi issues   (<code>c6f810e</code>)</li> </ul>"},{"location":"CHANGELOG/#v010-2024-05-31","title":"v0.1.0 (2024-05-31)","text":""},{"location":"CHANGELOG/#bug-fixes_20","title":"Bug Fixes","text":"<ul> <li>Update gitignore   (<code>97e8fde</code>)</li> </ul>"},{"location":"CHANGELOG/#features_23","title":"Features","text":"<ul> <li> <p>Add docs and test   (<code>76e92ff</code>)</p> </li> <li> <p>Add github actions   (<code>85891c4</code>)</p> </li> <li> <p>First commit   (<code>8ed31c9</code>)</p> </li> </ul>"},{"location":"dmpdirs/","title":"<code>DamplyDirs</code>: Simplified Data Science Directory Management","text":"<p>Data science projects often involve complex directory structures to organize raw data, processed data, results, and code. Managing these directories manually can be error-prone and time-consuming. The <code>damply.dmpdirs</code> module solves this problem by providing standardized access to these directories through a simple, consistent interface.</p>"},{"location":"dmpdirs/#the-problem","title":"The Problem","text":"<p>As data scientists, we face several challenges when working with project directories:</p> <ul> <li>Inconsistent Naming: Different team members might use different directory names</li> <li>Path Construction: Building paths can be error-prone across operating systems</li> <li>Missing Directories: Time wasted creating directories that should already exist</li> <li>Environment Variables: Need to use the same paths in Python, R, and shell scripts</li> <li>Project Transfer: Moving projects between systems requires path adjustments</li> </ul>"},{"location":"dmpdirs/#solution-with-damplydirs","title":"Solution with <code>DamplyDirs</code>","text":"<p>DamplyDirs provides intuitive, standardized access to common data science project directories with environment variable support:</p> <pre><code>from damply import dirs\n\n# Access directory paths easily\ndata_file = dirs.RAWDATA / \"dataset.csv\"\n\n# Write outputs to standard locations\nresults_file = dirs.RESULTS / \"analysis_results.csv\"\n\n# Get a nice visual representation of your directories\nprint(dirs)\n# DamplyDirs&lt;Strict Mode: OFF&gt;\n# Project Root: /private/tmp/ctrpv2-treatmentresponse-snakemake\n# CONFIG       : \u251c\u2500\u2500 config\n# LOGS         : \u251c\u2500\u2500 logs\n# METADATA     : \u251c\u2500\u2500 metadata\n# NOTEBOOKS    : \u251c\u2500\u2500 workflow/notebooks\n# PROCDATA     : \u251c\u2500\u2500 data/procdata\n# RAWDATA      : \u251c\u2500\u2500 data/rawdata\n# RESULTS      : \u251c\u2500\u2500 data/results\n# SCRIPTS      : \u2514\u2500\u2500 workflow/scripts\n</code></pre>"},{"location":"dmpdirs/#directory-resolution","title":"Directory Resolution","text":"<p><code>DamplyDirs</code> resolves directory paths in the following order:</p> <ol> <li>Environment Variables(RECOMMENDED): If an environment variable with the same name exists (e.g., <code>RAWDATA</code>), its value is used</li> <li>Default Structure: Otherwise, falls back to a standard directory structure</li> </ol>"},{"location":"dmpdirs/#default-directory-structure","title":"Default Directory Structure","text":"<p>When environment variables aren't set, <code>DamplyDirs</code> uses this standard structure:</p> <pre><code>project_root/\n\u251c\u2500\u2500 config/         # Configuration files\n\u251c\u2500\u2500 data/           # All data in one parent directory\n\u2502   \u251c\u2500\u2500 procdata/   # Processed/intermediate data\n\u2502   \u251c\u2500\u2500 rawdata/    # Raw input data\n\u2502   \u2514\u2500\u2500 results/    # Analysis outputs\n\u251c\u2500\u2500 logs/           # Log files\n\u251c\u2500\u2500 metadata/       # Dataset descriptions\n\u2514\u2500\u2500 workflow/       # Code organization\n    \u251c\u2500\u2500 notebooks/  # Jupyter notebooks\n    \u2514\u2500\u2500 scripts/    # Analysis scripts\n</code></pre>"},{"location":"dmpdirs/#recommended-environment-variable-integration","title":"Recommended Environment Variable Integration","text":"<p><code>DamplyDirs</code> seamlessly integrates with environment variables, making it perfect for projects using tools like <code>pixi</code>:</p> <pre><code># Example pixi.toml configuration\n[activation]\n# convenient variables which can be used in scripts\nenv.CONFIG = \"${PIXI_PROJECT_ROOT}/config\"\nenv.METADATA = \"${PIXI_PROJECT_ROOT}/metadata\"\nenv.LOGS = \"${PIXI_PROJECT_ROOT}/logs\"\nenv.RAWDATA = \"${PIXI_PROJECT_ROOT}/data/rawdata\"\nenv.PROCDATA = \"${PIXI_PROJECT_ROOT}/data/procdata\"\nenv.RESULTS = \"${PIXI_PROJECT_ROOT}/data/results\"\nenv.SCRIPTS = \"${PIXI_PROJECT_ROOT}/workflow/scripts\"\n</code></pre> <p>This will automatically set these environment variables when you activate your project environment via <code>pixi shell</code> or <code>pixi run</code>.</p> <p>With this setup, your paths will be consistent across:</p> <ul> <li>Python scripts using <code>DamplyDirs</code></li> <li>R scripts using environment variables</li> <li>Shell scripts and commands</li> <li>Snakemake workflows</li> <li>Any other tools that can access environment variables</li> </ul>"},{"location":"dmpdirs/#getting-started","title":"Getting Started","text":""},{"location":"dmpdirs/#basic-usage","title":"Basic Usage","text":"<pre><code>from damply import dirs\n\n# Access paths directly\nconfig_path = dirs.CONFIG / \"analysis_config.yaml\"\ndata_path = dirs.RAWDATA / \"experiment_1\" / \"samples.csv\"\nresults_path = dirs.RESULTS / \"figures\" / \"figure1.png\"\n</code></pre>"},{"location":"dmpdirs/#auto-directory-creation","title":"Auto-Directory Creation","text":"<p>By default, <code>DamplyDirs</code> operates in non-strict mode, which automatically creates missing directories when they are accessed. This behavior helps get you started quickly without having to manually create all directories first:</p> <pre><code># Accessing this path will create the directory if it doesn't exist\nmissing_dir = dirs.RESULTS / \"new_analysis\"\n\n# You can enable strict mode if you prefer to get errors for missing directories\ndirs.set_strict_mode(True)\n\n# Now this will raise DirectoryNameNotFoundError if the directory doesn't exist\ntry:\n    missing_dir = dirs.RESULTS / \"another_analysis\"\nexcept DirectoryNameNotFoundError:\n    print(\"Directory doesn't exist and won't be created in strict mode\")\n</code></pre> <p>When not in strict mode, you'll see informative log messages when directories are created automatically.</p>"},{"location":"dmpdirs/#advanced-usage","title":"Advanced Usage","text":""},{"location":"dmpdirs/#project-root-discovery","title":"Project Root Discovery","text":"<p><code>DamplyDirs</code> finds your project root in the following order:</p> <ol> <li>From <code>DMP_PROJECT_ROOT</code> environment variable</li> <li>From <code>PIXI_PROJECT_ROOT</code> environment variable</li> <li>Current working directory as fallback (not recommended as this won't work in jupyter notebooks)</li> </ol> <p>Set the environment variable to ensure consistent behavior across scripts:</p> <pre><code>export DMP_PROJECT_ROOT=/path/to/my/project\n</code></pre>"},{"location":"dmpdirs/#using-in-other-languages-and-tools","title":"Using in Other Languages and Tools","text":"<p>Note</p> <p>Assuming you have set the environment variables as shown in the <code>pixi.toml</code> example, you can access these directories in various languages and tools.</p> PythonR ScriptsShell ScriptsSnakemake <pre><code>from damply import dirs\n\n# Access directories using environment variables\nraw_data_path = dirs.RAWDATA / \"dataset.csv\"\nresults_path = dirs.RESULTS / \"analysis_results.csv\"\n\n# Read data and save results\nimport pandas as pd\ndata = pd.read_csv(raw_data_path)\ndata.to_csv(results_path, index=False)\n</code></pre> <pre><code># Access the same directories in R\nRAWDATA &lt;- Sys.getenv(\"RAWDATA\")\nRESULTS &lt;- Sys.getenv(\"RESULTS\")\n\n# Read data and save results using those paths\ndata &lt;- read.csv(file.path(RAWDATA, \"dataset.csv\"))\nwrite.csv(results, file.path(RESULTS, \"analysis_results.csv\"))\n</code></pre> <pre><code># Access the same directories in shell scripts\necho $RAWDATA\nls $RAWDATA/dataset.csv\ncp $RAWDATA/dataset.csv $PROCDATA/processed_dataset.csv\n</code></pre> <pre><code># Snakemake is a python superset, so you can use damply.dmpdirs directly!\nfrom damply import dirs\nrule all:\n    input:\n        dirs.RESULTS / \"final_results.txt\"\nrule process_data:\n    input:\n        dirs.RAWDATA / \"dataset.csv\"\n    output:\n        dirs.PROCDATA / \"processed_data.csv\"\n    shell:\n        \"${dirs.SCRIPTS}/process_data.sh {input} &gt; {output}\"\n</code></pre>"},{"location":"dmpdirs/#real-world-examples","title":"Real-World Examples","text":""},{"location":"dmpdirs/#data-processing-workflow","title":"Data Processing Workflow","text":"<pre><code>from damply import dirs\nimport pandas as pd\n\n# Load input data\ninput_file = dirs.RAWDATA / \"experiment_2023\" / \"samples.csv\"\ndata = pd.read_csv(input_file)\n\n# Process data\nprocessed_data = data.groupby('sample_id').mean()\n\n# Save intermediate result\ninterim_file = dirs.PROCDATA / \"aggregated_samples.csv\"\nprocessed_data.to_csv(interim_file)\n\n# Generate and save visualization\noutput_file = dirs.RESULTS / \"sample_means.png\"\nprocessed_data.plot(kind='bar').figure.savefig(output_file)\nprint(f\"Results saved to {output_file}\")\n# Results saved to /path/to/project_root/data/results/sample_means.png\n</code></pre>"},{"location":"dmpdirs/#configuration-management","title":"Configuration Management","text":"<pre><code>from damply import dirs\nimport yaml\n\n# Load configuration\nconfig_file = dirs.CONFIG / \"analysis_params.yaml\"\nwith open(config_file, 'r') as f:\n    config = yaml.safe_load(f)\n\n# Use configuration in analysis\nthreshold = config['filtering']['threshold']\nprint(f\"Using threshold: {threshold}\")\n</code></pre>"},{"location":"dmpdirs/#troubleshooting","title":"Troubleshooting","text":""},{"location":"dmpdirs/#directory-not-found-errors","title":"\"Directory Not Found\" Errors","text":"<p>If you get a <code>DirectoryNameNotFoundError</code>:</p> <ol> <li>Check that you're in the correct project root</li> <li>Verify that the directory exists or the environment variable is set</li> <li>Consider setting <code>dirs.set_strict_mode(False)</code> to auto-create directories</li> </ol>"},{"location":"dmpdirs/#environment-variable-not-set","title":"Environment Variable Not Set","text":"<p>If you get an <code>EnvironmentVariableNotSetError</code> or see a warning log about falling back to default paths:</p> <ol> <li>Make sure your environment is activated and you have set the environment variables    in your <code>pixi.toml</code>!</li> <li>Check that the variable is set correctly (try <code>echo $VARNAME</code>)</li> </ol>"},{"location":"dmpdirs/#best-practices","title":"Best Practices","text":"<ul> <li>Use <code>DamplyDirs</code> consistently across all project scripts</li> <li>Set environment variables in your project configuration (<code>pixi.toml</code>, etc.)</li> <li>Keep a clear separation between raw data, processed data, and results</li> <li>Monitor the logs - they provide useful information about directory creation and fallbacks</li> </ul> <p>By using <code>DamplyDirs</code> with environment variables, you ensure that your data science projects remain organized, portable, and consistent across languages, tools, and team members.</p>"},{"location":"dmpdirs/#strict-mode-and-environment-variables","title":"Strict Mode and Environment Variables","text":"<p>When using environment variables with <code>DamplyDirs</code>, the behavior depends on the strict mode setting:</p> <ol> <li>In Strict Mode (<code>dirs.set_strict_mode(True)</code>):</li> <li>If an environment variable for a directory is not set, an <code>EnvironmentVariableNotSetError</code> is raised</li> <li> <p>If a directory doesn't exist (even with environment variable), a <code>DirectoryNameNotFoundError</code> is raised</p> </li> <li> <p>In Non-Strict Mode (<code>dirs.set_strict_mode(False)</code>, the default):</p> </li> <li>If an environment variable isn't set, falls back to default paths with a warning log message</li> <li>If a directory doesn't exist, it's automatically created with an info log message</li> </ol> <p>This behavior gives you flexibility to enforce environment variable usage in production while allowing more permissive behavior during development:</p> <pre><code># In development: auto-create missing directories (default behavior)\ndirs.set_strict_mode(False)\ndata_path = dirs.RAWDATA / \"my_data.csv\"  # Will use default path if env var not set\n\n# In production: enforce that environment variables are properly set\ndirs.set_strict_mode(True)\ntry:\n    data_path = dirs.RAWDATA / \"my_data.csv\"\nexcept EnvironmentVariableNotSetError:\n    print(\"RAWDATA environment variable must be set!\")\n</code></pre>"},{"location":"HPC4Health/audit/","title":"Auditing the DMP on HPC4Health","text":"What is HPC4Health? <p>The High Performance Computing for Health (HPC4Health / H4H) is a computing cluster operated at the University Health Network. The audit functionality of <code>damply</code> was specifically developed for usage by the BHKLab on H4H. The following instructions will not work unless you have access to the BHKLab project folders on H4H.</p> <p>Damply comes equipped with ability to audit your DMP setup to track things like memory usage and metadata. This functionality is to be used for managing the <code>bhklab</code> and <code>radiomics</code> project directories on H4H.</p>"},{"location":"HPC4Health/audit/#installing-damply-for-the-command-line","title":"Installing Damply for the Command Line","text":"<ol> <li> <p><code>salloc</code> onto the build node on H4H.</p> </li> <li> <p>Install <code>uv</code>, which is a tool that will make any python package tools available globally without messing around with virtual environments or <code>base</code> conda environments.</p> </li> <li> <p>Install Damply by running     <pre><code>uv tool install --refresh --force --upgrade damply\n</code></pre></p> </li> </ol> <p>Now you can use <code>damply</code> from the command line on any node on HPC4Health, including the login node. </p> <pre><code>$ which damply\n~/.local/bin/damply\n$ damply --help\n\nUsage: damply [OPTIONS] COMMAND [ARGS]...\n\n  A tool to interact with systems implementing the Data Management Plan (DMP)\n  standard.\n\n  This tool is meant to allow sys-admins to easily query and audit the\n  metadata of their projects.\n\n  To enable logging, set the env variable `DAMPLY_LOG_LEVEL`.\n\nOptions:\n  --version   Show the version and exit.\n  -h, --help  Show this message and exit.\n\nCommands:\n  audit         Audit all subdirectories and aggregate damply output into...\n  full-audit    Run a full audit for the specified project group.\n  groups-table  Generate a user-group membership table from group names.\n  project       Display information about the current project.\n  whose         Print the owner of the file or directory.\n</code></pre>"},{"location":"HPC4Health/audit/#audit","title":"Audit","text":"<p>TLDR pipeline</p> <ol> <li>Run <code>damply full-audit bhklab</code> to submit a bunch of jobs to the cluster</li> <li>Wait for the jobs to finish</li> <li>Run <code>damply collect-audits bhklab</code> to collect the results and save csv to  <li>Run <code>damply plot &lt;filepath&gt;</code> to create a damply plot html file</li> <li><code>scp</code> the html file to your local machine and open it in Chrome</li>"},{"location":"HPC4Health/audit/#full-audit","title":"Full Audit","text":"<p>The basic audit batch submissions have been embedded into the <code>damply</code> CLI tool.</p> <pre><code>$ damply full-audit --help\nUsage: damply full-audit [OPTIONS] PROJECT_GROUP\n\n  Run a full audit for the specified project group.\n\n  This will essentially, submit a bunch of sbatch jobs to the cluster for all\n  the directories in the project group.\n\nOptions:\n  -f, --force-compute-details  Force the computation of details for the\n                               directory and subdirectories regardless of\n                               cache.\n</code></pre> <p>Step 1: <code>salloc</code> into a compute node. This does not need a lot of compute power.</p> <pre><code>salloc -c 1 --mem=256 --time=0:15:0\n</code></pre> <p>Step 2: Run the <code>full-audit</code> command. This will submit a bunch of jobs, that will run <code>damply audit</code> on all the subdirectories. See the source code for the details of how it chooses the directories to audit.</p> bhklabradiomics <pre><code>damply full-audit bhklab\n</code></pre> <pre><code>damply full-audit radiomics\n</code></pre> <p>The results will be stored in:</p> bhklabradiomics <pre><code>/cluster/projects/bhklab/admin/audit/...\n</code></pre> <pre><code>/cluster/projects/radiomics/admin/audit/...\n</code></pre> <p>Info</p> <p>Damply uses caching to avoid recomputing the same metadata for directories that have not changed. This means that jobs that dont need recomputation will run in a few seconds, while jobs that need recomputation can take up to an hour or more, depending on the size of the directory and the number of files in it.</p> <p>If you want to force the recomputation of the metadata, you can use the <code>--force-compute-details</code> flag</p>"},{"location":"HPC4Health/audit/#collecting-results","title":"Collecting Results","text":"<p>After all the jobs have finished, we need to collect the results.</p> <pre><code>$ damply collect-audits --help\n\nUsage: damply collect-audits [OPTIONS] PROJECT_GROUP\n\n  Collect audits for a project group (after full-audit).\n\n  keep_children: If\n\nOptions:\n  -f, --force      Force collection even if summary exists\n  --keep-children  Only collect source directories (aka higher level\n                   directories only)\n  -h, --help       Show this message and exit.\n</code></pre> <p>Run the command:</p> bhklabradiomics <pre><code>damply collect-audits bhklab\n</code></pre> <pre><code>damply collect-audits radiomics\n</code></pre> <p>This will collect all the audit results from the subdirectories and aggregate them into a single CSV file. The results will be stored in:</p> bhklabradiomics <pre><code>/cluster/projects/bhklab/admin/audit/results/&lt;date&gt;/\n</code></pre> <pre><code>/cluster/projects/radiomics/admin/audit/results/&lt;date&gt;/\n</code></pre>"},{"location":"HPC4Health/audit/#plotting-results","title":"Plotting Results","text":"<p>Run the command:</p> <pre><code>damply plot /cluster/projects/bhklab/admin/audit/results/&lt;date&gt;/&lt;path_to_csv&gt;\n</code></pre>"},{"location":"HPC4Health/group_permissions/","title":"Group Permissions","text":""},{"location":"HPC4Health/group_permissions/#get-group-membership-table","title":"Get Group membership table","text":"<pre><code>$ damply groups-table -h\nUsage: damply groups-table [OPTIONS] [GROUP_NAMES]...\n\n  Generate a user-group membership table from group names.\n\n  This CLI tool takes one or more Unix/Linux group names, collects their\n  member users, enriches that information with full user metadata (UID, real\n  name, etc.), and outputs a formatted table where each row represents a user\n  and each group has its own column.\n\n  By default, the tool uses a set of lab-specific groups but can be customized\n  to include others. The resulting table indicates with a 1 or 0 whether a\n  user is a member of each group.\n\n  Default groups are: bhklab, radiomics, bhklab_icb,\n  bhklab_pmcc_gyn_autosegmentation, bhklab_pmcc_gyn_gu.\n\n  Examples\n  --------\n  Basic usage with default group set:\n\n      $ damply groups-table\n\n  Include extra groups beyond the default:\n\n      $ damply groups-table --additional-groups ega,cbmp\n\n  Fully custom group list (ignores defaults):\n\n      $ damply groups-table bhklab radiomics cbmp\n\n  Keep other group columns found in users' metadata:\n\n      $ damply groups-table bhklab radiomics --keep-extra-groups\n\n  Export as CSV:\n\n      $ damply groups-table bhklab radiomics --csv &gt; output.csv\n\n  Notes\n  -----\n  This tool requires access to system group/user information, and may rely on NSS/SSSD/LDAP to\n  resolve group memberships. If some groups are not enumerable, users in those groups may be\n  resolved indirectly by collecting members from requested groups.\n\nOptions:\n  -a, --additional-groups TEXT  Additional comma separated groups to the\n                                default list.\n  -k, --keep-extra-groups       Keep columns for groups not explicitly\n                                requested.\n  --csv                         Output the table as a CSV file instead of\n                                printing it, useful for further processing or\n                                &gt; into files.\n  -h, --help                    Show this message and exit.\n</code></pre> <p>Example Output</p> <pre><code>$ damply groups-table fakegroup\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n\u2503 name       \u2503 realname           \u2503 uid   \u2503 default_group \u2503 othergroup \u2503\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\n\u2502 smithj     \u2502 John Smith         \u2502 11111 \u2502 fakegroup     \u2502 1          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 doej       \u2502 Jane Doe           \u2502 22222 \u2502 fakegroup     \u2502 0          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"HPC4Health/group_permissions/#who-owns-a-directory-or-file","title":"Who owns a directory or file?","text":"<pre><code>$ damply whose --help\nUsage: damply whose [OPTIONS] [PATH]\n\n  Print the owner of the file or directory.\n\nOptions:\n  -j, --json  Output in JSON format.\n  -h, --help  Show this message and exit.\n</code></pre> <p>Example Output</p> <pre><code>$ damply whose /cluster/projects/bhklab/projects/radiogenomics\nPath: /cluster/projects/bhklab/projects/radiogenomics\nUsername: t138199uhn\nUID: 90715\nReal Name: Jackie Yang Chen\n</code></pre>"},{"location":"HPC4Health/group_permissions/#deleting-directories-that-we-dont-have-write-permissions-to","title":"Deleting directories that we don't have Write permissions to","text":"<ol> <li> <p>Get the full path of the directory you want to delete</p> <pre><code>/cluster/projects/bhklab/Users/jsmith\n</code></pre> </li> <li> <p>Email Zhibin Lu to request he either delete the directory or transfer ownership to you.</p> </li> </ol>"}]}